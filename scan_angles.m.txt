function [theta_best, power_max] = scan_angles(s, Fs, c, d, M)

    %% Input
    % 1) s : signal
    % 4) Fs : sampling frequency
    % 3) c : speed of sound
    % 4) d : distance between two sensors

    %% Output
    % 1) theta_best : array of angles with maximum power, one for each microphones
    % 2) power_max : array of maximum power values, one for each microphones
    
    %% parameters
    
    angles = -90:1:90; % angles range between -90 and 90 degrees

    % initialize the two vectors
    theta_best = zeros(M, 1);
    power_max = zeros(M, 1);

%% Loop over the microphones
    for m = 1:M

        disp(['Processando il microfono ', num2str(m)]);

        % Initialize the power array for current microphone
        power = zeros(length(angles), 1);

        %% Loop over the angles
        for i=1:length(angles)
        
            % Convert angles in radiants
            theta_rad = angles(i) * pi / 180;

            % pass the found theta_rad to the DAS function. For each angle in
            % the range, the DAS beamformer is applied in order to sum the
            % delayed signal
            s_sum = delay_and_sum(s, Fs, c, d, theta_rad);

            % find the power of the summed signal
            power(i) = norm(s_sum, 2)^2;
            %disp(['angle: ', num2str(angles(i))]);
            %disp(['power: ', num2str(power(i))]);

        end  

        % find the angle with the maximum power
        [power_max(m), idx_max] = max(power); 
        % save the best angle
        theta_best(m) = angles(idx_max);
        disp(['power max : ', num2str(power_max(m))]);
        disp(['theta best : ', num2str(theta_best(m))]);

    end
end